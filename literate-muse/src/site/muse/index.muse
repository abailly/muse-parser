#title Literate programming with muse
#author Arnaud Bailly - abailly@oqube.com

This *Muse-in-Java* extension allows one to write *literate programming*
documents, ie. documents that are readable by humans and that can also
be processed to generate interpretable or compilable source code files.
*Literate programming* is a term invented by [[http://www-cs-faculty.stanford.edu/~knuth/][Donald E. Knuth]] to
designate the practice of documenting text by programs. To quote
[[http://www.eecs.harvard.edu/nr/noweb][noweb]]'s site: 
   "Literate programming is the art of preparing programs for human
   readers."

You will find in this package:
 - An implementation of [[http://www.oqube.com/projects/muse-in-java/muse-parser][Muse parser]] API for extracting source code
   fragments from standard muse files, store them and produce source
   code files from these fragments. This can be used either
   programatically (embedded in another Java program) or through a
   command-line interface,
 - A modified [[two-mode-mode.el]] file designed for editing literate muse
   files with emacs. This file allows mode switching as one traverses
   code and text sections.

More information on literate programming can be found following these links: 
 - [[http://www.literateprogramming.com/]]: online reference on literate
   programming.
 - [[http://www.eecs.harvard.edu/nr/noweb/]]: the **noweb** literate
   programming system from which this plugin is inspired.
 - [[http://en.wikipedia.org/wiki/Literate_programming]]: wikipedia
   article on literate programming.
